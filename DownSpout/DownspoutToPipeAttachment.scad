

rect = [
//[38.9973,16.979],
//[39.2166,15.9981],
//[38.7169,17.9443],
//[-39.5,13],
//[-39.4684,14.0046],
//[-39.5,-13],
[-39.3738,15.0053],
[-39.2166,15.9981],
[-38.9973,16.979],
[-38.7169,17.9443],
[-38.3764,18.89],
[-37.9772,19.8125],
[-37.5209,20.7081],
[-37.0092,21.5732],
[-36.4443,22.4046],
[-35.8282,23.1988],
[-35.1635,23.9527],
[-34.4527,24.6635],
[-33.6988,25.3282],
[-32.9046,25.9443],
[-32.0732,26.5092],
[-31.2081,27.0209],
[-30.3125,27.4772],
[-29.39,27.8764],
[-28.4443,28.2169],
[-27.479,28.4973],
[-26.4981,28.7166],
[-25.5053,28.8738],
[-24.5046,28.9684],
[-23.5,29],
[23.5,29],
[24.5046,28.9684],
[25.5053,28.8738],
[26.4981,28.7166],
[27.479,28.4973],
[28.4443,28.2169],
[29.39,27.8764],
[30.3125,27.4772],
[31.2081,27.0209],
[32.0732,26.5092],
[32.9046,25.9443],
[33.6988,25.3282],
[34.4527,24.6635],
[35.1635,23.9527],
[35.8282,23.1988],
[36.4443,22.4046],
[37.0092,21.5732],
[37.5209,20.7081],
[37.9772,19.8125],
[38.3764,18.89],
[39.3738,15.0053],
[39.4684,14.0046],
[39.5,13],
[39.5,-13],
[39.4684,-14.0046],
[39.3738,-15.0053],
[39.2166,-15.9981],
[38.9973,-16.979],
[38.7169,-17.9443],
[38.3764,-18.89],
[37.9772,-19.8125],
[37.5209,-20.7081],
[37.0092,-21.5732],
[36.4443,-22.4046],
[35.8282,-23.1988],
[35.1635,-23.9527],
[34.4527,-24.6635],
[33.6988,-25.3282],
[32.9046,-25.9443],
[32.0732,-26.5092],
[31.2081,-27.0209],
[30.3125,-27.4772],
[29.39,-27.8764],
[28.4443,-28.2169],
[27.479,-28.4973],
[26.4981,-28.7166],
[25.5053,-28.8738],
[24.5046,-28.9684],
[23.5,-29],
[-23.5,-29],
[-24.5046,-28.9684],
[-25.5053,-28.8738],
[-26.4981,-28.7166],
[-27.479,-28.4973],
[-28.4443,-28.2169],
[-29.39,-27.8764],
[-30.3125,-27.4772],
[-31.2081,-27.0209],
[-32.0732,-26.5092],
[-32.9046,-25.9443],
[-33.6988,-25.3282],
[-34.4527,-24.6635],
[-35.1635,-23.9527],
[-35.8282,-23.1988],
[-36.4443,-22.4046],
[-37.0092,-21.5732],
[-37.5209,-20.7081],
[-37.9772,-19.8125],
[-38.3764,-18.89],
[-38.7169,-17.9443],
[-38.9973,-16.979],
[-39.2166,-15.9981],
[-39.3738,-15.0053],
[-39.4684,-14.0046],
];

pipe = [
[-30.5, 0],
[-30, 5.5],
[-29.5, 7.74596669241483],
[-29, 9.44722181384559],
[-28.5, 10.8627804912002],
[-28, 12.0933866224478],
[-27.5, 13.1909059582729],
[-27, 14.1862609591111],
[-26.5, 15.0996688705415],
[-26, 15.945218719102],
[-25.5, 16.7332005306815],
[-25, 17.4714052096561],
[-24.5, 18.1659021245849],
[-24, 18.8215302247187],
[-23.5, 19.4422220952236],
[-23, 20.0312256240101],
[-22.5, 20.591260281974],
[-22, 21.1246301742776],
[-21.5, 21.6333076527839],
[-21, 22.1189963605947],
[-20.5, 22.5831795812724],
[-20, 23.0271578793389],
[-19.5, 23.4520787991171],
[-19, 23.8589605808803],
[-18.5, 24.2487113059643],
[-18, 24.6221445044903],
[-17.5, 24.9799919935936],
[-17, 25.3229145242012],
[-16.5, 25.6515106767613],
[-16, 25.9663243451976],
[-15.5, 26.2678510731274],
[-15, 26.556543449779],
[-14.5, 26.8328157299975],
[-14, 27.0970478096785],
[-13.5, 27.3495886623547],
[-13, 27.5907593226428],
[-12.5, 27.8208554864871],
[-12, 28.0401497856199],
[-11.5, 28.2488937836511],
[-11, 28.4473197331489],
[-10.5, 28.6356421265527],
[-10, 28.8140590684478],
[-9.5, 28.9827534923789],
[-9, 29.1418942417956],
[-8.5, 29.2916370317536],
[-8, 29.4321253055229],
[-7.5, 29.563490998189],
[-7, 29.6858552175948],
[-6.5, 29.7993288515027],
[-6, 29.9040131086114],
[-5.5, 30],
[-5, 30.0873727666608],
[-4.5, 30.1662062579967],
[-4, 30.2365672654817],
[-3.5, 30.2985148150862],
[-3, 30.3521004215524],
[-2.5, 30.3973683071413],
[-2, 30.4343555870664],
[-1.5, 30.4630924234556],
[-1, 30.4836021493524],
[-0.5, 30.4959013639538],
[0, 30.5],
[0.5, 30.4959013639538],
[1, 30.4836021493524],
[1.5, 30.4630924234556],
[2, 30.4343555870664],
[2.5, 30.3973683071413],
[3, 30.3521004215524],
[3.5, 30.2985148150862],
[4, 30.2365672654817],
[4.5, 30.1662062579967],
[5, 30.0873727666608],
[5.5, 30],
[6, 29.9040131086114],
[6.5, 29.7993288515027],
[7, 29.6858552175948],
[7.5, 29.563490998189],
[8, 29.4321253055229],
[8.5, 29.2916370317536],
[9, 29.1418942417956],
[9.5, 28.9827534923789],
[10, 28.8140590684478],
[10.5, 28.6356421265527],
[11, 28.4473197331489],
[11.5, 28.2488937836511],
[12, 28.0401497856199],
[12.5, 27.8208554864871],
[13, 27.5907593226428],
[13.5, 27.3495886623547],
[14, 27.0970478096785],
[14.5, 26.8328157299975],
[15, 26.556543449779],
[15.5, 26.2678510731274],
[16, 25.9663243451976],
[16.5, 25.6515106767613],
[17, 25.3229145242012],
[17.5, 24.9799919935936],
[18, 24.6221445044903],
[18.5, 24.2487113059643],
[19, 23.8589605808803],
[19.5, 23.4520787991171],
[20, 23.0271578793389],
[20.5, 22.5831795812724],
[21, 22.1189963605947],
[21.5, 21.6333076527839],
[22, 21.1246301742776],
[22.5, 20.591260281974],
[23, 20.0312256240101],
[23.5, 19.4422220952236],
[24, 18.8215302247187],
[24.5, 18.1659021245849],
[25, 17.4714052096561],
[25.5, 16.7332005306815],
[26, 15.945218719102],
[26.5, 15.0996688705415],
[27, 14.1862609591111],
[27.5, 13.1909059582729],
[28, 12.0933866224478],
[28.5, 10.8627804912002],
[29, 9.44722181384559],
[29.5, 7.74596669241483],
[30, 5.5],
[30.5, 0],
[-30.5, 0],
[-30, -5.5],
[-29.5, -7.74596669241483],
[-29, -9.44722181384559],
[-28.5, -10.8627804912002],
[-28, -12.0933866224478],
[-27.5, -13.1909059582729],
[-27, -14.1862609591111],
[-26.5, -15.0996688705415],
[-26, -15.945218719102],
[-25.5, -16.7332005306815],
[-25, -17.4714052096561],
[-24.5, -18.1659021245849],
[-24, -18.8215302247187],
[-23.5, -19.4422220952236],
[-23, -20.0312256240101],
[-22.5, -20.591260281974],
[-22, -21.1246301742776],
[-21.5, -21.6333076527839],
[-21, -22.1189963605947],
[-20.5, -22.5831795812724],
[-20, -23.0271578793389],
[-19.5, -23.4520787991171],
[-19, -23.8589605808803],
[-18.5, -24.2487113059643],
[-18, -24.6221445044903],
[-17.5, -24.9799919935936],
[-17, -25.3229145242012],
[-16.5, -25.6515106767613],
[-16, -25.9663243451976],
[-15.5, -26.2678510731274],
[-15, -26.556543449779],
[-14.5, -26.8328157299975],
[-14, -27.0970478096785],
[-13.5, -27.3495886623547],
[-13, -27.5907593226428],
[-12.5, -27.8208554864871],
[-12, -28.0401497856199],
[-11.5, -28.2488937836511],
[-11, -28.4473197331489],
[-10.5, -28.6356421265527],
[-10, -28.8140590684478],
[-9.5, -28.9827534923789],
[-9, -29.1418942417956],
[-8.5, -29.2916370317536],
[-8, -29.4321253055229],
[-7.5, -29.563490998189],
[-7, -29.6858552175948],
[-6.5, -29.7993288515027],
[-6, -29.9040131086114],
[-5.5, -30],
[-5, -30.0873727666608],
[-4.5, -30.1662062579967],
[-4, -30.2365672654817],
[-3.5, -30.2985148150862],
[-3, -30.3521004215524],
[-2.5, -30.3973683071413],
[-2, -30.4343555870664],
[-1.5, -30.4630924234556],
[-1, -30.4836021493524],
[-0.5, -30.4959013639538],
[0, -30.5],
[0.5, -30.4959013639538],
[1, -30.4836021493524],
[1.5, -30.4630924234556],
[2, -30.4343555870664],
[2.5, -30.3973683071413],
[3, -30.3521004215524],
[3.5, -30.2985148150862],
[4, -30.2365672654817],
[4.5, -30.1662062579967],
[5, -30.0873727666608],
[5.5, -30],
[6, -29.9040131086114],
[6.5, -29.7993288515027],
[7, -29.6858552175948],
[7.5, -29.563490998189],
[8, -29.4321253055229],
[8.5, -29.2916370317536],
[9, -29.1418942417956],
[9.5, -28.9827534923789],
[10, -28.8140590684478],
[10.5, -28.6356421265527],
[11, -28.4473197331489],
[11.5, -28.2488937836511],
[12, -28.0401497856199],
[12.5, -27.8208554864871],
[13, -27.5907593226428],
[13.5, -27.3495886623547],
[14, -27.0970478096785],
[14.5, -26.8328157299975],
[15, -26.556543449779],
[15.5, -26.2678510731274],
[16, -25.9663243451976],
[16.5, -25.6515106767613],
[17, -25.3229145242012],
[17.5, -24.9799919935936],
[18, -24.6221445044903],
[18.5, -24.2487113059643],
[19, -23.8589605808803],
[19.5, -23.4520787991171],
[20, -23.0271578793389],
[20.5, -22.5831795812724],
[21, -22.1189963605947],
[21.5, -21.6333076527839],
[22, -21.1246301742776],
[22.5, -20.591260281974],
[23, -20.0312256240101],
[23.5, -19.4422220952236],
[24, -18.8215302247187],
[24.5, -18.1659021245849],
[25, -17.4714052096561],
[25.5, -16.7332005306815],
[26, -15.945218719102],
[26.5, -15.0996688705415],
[27, -14.1862609591111],
[27.5, -13.1909059582729],
[28, -12.0933866224478],
[28.5, -10.8627804912002],
[29, -9.44722181384559],
[29.5, -7.74596669241483],
[30, -5.5],
[30.5, 0],];

triangle = [[0,0],[1,0],[0,1]];


$fn=100;

// Weighted average works on both scalars (like a size) or vectors (like a grid of points)
function weightedAverage(item1, item2, weight) = item1 * (1.0 - weight) + (item2 * weight * 1.0);

// -----------------------------------------------------------------------------

// Percent takes two numbers and returns the percentage as a floating point number.
function percent (partial, whole) = partial * 1.0 / whole;

//Tappered downspout connector.
union()
{
    //Z = 5 for added thickness at pipe join.
    color("Aquamarine") draw([0.777848101265823,1.05043103448276,5],[0,0,0],rect,2,1);
    draw([0.783544303797468,1.04913793103448,1],[0,0,-2],rect,2,1);
    draw([0.789240506329114,1.04784482758621,1],[0,0,-3],rect,2,1);
    draw([0.79493670886076,1.04655172413793,1],[0,0,-4],rect,2,1);
    draw([0.800632911392405,1.04525862068966,1],[0,0,-5],rect,2,1);
    draw([0.806329113924051,1.04396551724138,1],[0,0,-6],rect,2,1);
    draw([0.812025316455696,1.0426724137931,1],[0,0,-7],rect,2,1);
    draw([0.817721518987342,1.04137931034483,1],[0,0,-8],rect,2,1);
    draw([0.823417721518987,1.04008620689655,1],[0,0,-9],rect,2,1);
    draw([0.829113924050633,1.03879310344828,1],[0,0,-10],rect,2,1);
    draw([0.834810126582278,1.0375,1],[0,0,-11],rect,2,1);
    draw([0.840506329113924,1.03620689655172,1],[0,0,-12],rect,2,1);
    draw([0.84620253164557,1.03491379310345,1],[0,0,-13],rect,2,1);
    draw([0.851898734177215,1.03362068965517,1],[0,0,-14],rect,2,1);
    draw([0.857594936708861,1.0323275862069,1],[0,0,-15],rect,2,1);
    draw([0.863291139240506,1.03103448275862,1],[0,0,-16],rect,2,1);
    draw([0.868987341772152,1.02974137931034,1],[0,0,-17],rect,2,1);
    draw([0.874683544303797,1.02844827586207,1],[0,0,-18],rect,2,1);
    draw([0.880379746835443,1.02715517241379,1],[0,0,-19],rect,2,1);
    draw([0.886075949367089,1.02586206896552,1],[0,0,-20],rect,2,1);
    draw([0.891772151898734,1.02456896551724,1],[0,0,-21],rect,2,1);
    draw([0.89746835443038,1.02327586206897,1],[0,0,-22],rect,2,1);
    draw([0.903164556962025,1.02198275862069,1],[0,0,-23],rect,2,1);
    draw([0.908860759493671,1.02068965517241,1],[0,0,-24],rect,2,1);
    draw([0.914556962025316,1.01939655172414,1],[0,0,-25],rect,2,1);
    draw([0.920253164556962,1.01810344827586,1],[0,0,-26],rect,2,1);
    draw([0.925949367088608,1.01681034482759,1],[0,0,-27],rect,2,1);
    draw([0.931645569620253,1.01551724137931,1],[0,0,-28],rect,2,1);
    draw([0.937341772151899,1.01422413793103,1],[0,0,-29],rect,2,1);
    draw([0.943037974683544,1.01293103448276,1],[0,0,-30],rect,2,1);
    draw([0.94873417721519,1.01163793103448,1],[0,0,-31],rect,2,1);
    draw([0.954430379746835,1.01034482758621,1],[0,0,-32],rect,2,1);
    draw([0.960126582278481,1.00905172413793,1],[0,0,-33],rect,2,1);
    draw([0.965822784810127,1.00775862068966,1],[0,0,-34],rect,2,1);
    draw([0.971518987341772,1.00646551724138,1],[0,0,-35],rect,2,1);
    draw([0.977215189873418,1.0051724137931,1],[0,0,-36],rect,2,1);
    draw([0.982911392405063,1.00387931034483,1],[0,0,-37],rect,2,1);
    draw([0.988607594936709,1.00258620689655,1],[0,0,-38],rect,2,1);
    draw([0.994303797468354,1.00129310344828,1],[0,0,-39],rect,2,1);
    //Z=20 for coupling
    color("Turquoise") draw([1,1,20],[0,0,-49],rect,2,1);
}

// a thick plate where tapper ends and pipe starts.
difference()
{
    color("Teal") draw([0.777848101265823,1.05043103448276,4],[0,0,0],rect,2,0);
    //cut pipe hole thru plate
    color("Aqua") draw([1,1,5],[0,0,0],pipe,2,0);
}
color("DeepSkyBlue") draw([.94,.94,15],[0,0,8],pipe,2,1);

//Elbow pipe
translate([0,-30.5,30])
rotate([90,0,90])
elbowPipe(61/2,8,90,2);

//add flared collar for strength.
color("Maroon")
rotate_extrude($fn=200)
translate([30.5,0,0])
scale([1.8,9,5])
polygon(triangle);

//add shoulders to collar for additional adheasion.
color("OrangeRed")
//translate([20,20,20])
rotate([0,0,0])
shoulders([31.5,118.5,211.5,298.5]);

/*
simple method for drawing a scaled polygon.
scale - [x,y,z] scaling vectors
move - [x,y,z] direction vectors
shape - [[x,y]] array of points defining polygon
wall - thickness of wall. only for hollow objects
hollow - 0 or 1.
*/
module draw(scale, move, shape, wall, hollow)
{
    translate(move) 
    scale(scale) 
    linear_extrude(1,center=true)
    if (hollow)
    {
        difference()
        {
            minkowski()
            {
                polygon(shape);
                circle(wall);
            }
            
            polygon(shape);
        }
    }
    else
    {
        polygon(shape);
    }
}


module elbow(radius, length, angle)
{
    translate([-length,radius])
    rotate([0,90,0]) 
    cylinder(r=radius, h = length, $fn=100);
    
    rotate_extrude(angle=angle, convexity=10, $fn=100)
    translate([radius,0])
    circle(radius);
    
    translate([radius,0])
    rotate([90,0,0]) 
    cylinder(r=radius, h = length*2, $fn=100);
}


module elbowPipe(radius,length, angle, wallThickness)
{
    difference()
    {
        elbow(radius,length,angle);
        
        translate([wallThickness,wallThickness])
        elbow(radius-wallThickness, length+wallThickness+1, angle);
    }
}

module shoulders(a)
{
    for(i = [0:3])
    {
        rotate([0,0,a[i]])
        rotate_extrude(angle = 30, $fn=200)
        translate([30.5,0,0])
        scale([6.7,8,5])
        polygon(triangle);
    }
}